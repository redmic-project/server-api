# EMBEDDED SERVER CONFIGURATION (ServerProperties)
server.port=${server.port}
server.servlet.context-path=/api
server.tomcat.accesslog.enabled=true

spring.profiles.active=@spring.profiles.active@

#Active dataSession
dataSession.enabled=true

info.microservice.name=@project.name@
info.microservice.description=@project.description@
info.microservice.version=@project.version@
info.microservice.outputEncoding=@project.reporting.outputEncoding@

management.endpoints.web.exposure.include=health, info, prometheus

logging.level.root=warn
logging.level.org.springframework=warn
logging.level.es.redmic=${logging.level.es.redmic}

#Mediastorage S3
aws.bucket=${aws.bucket}
aws.access.key=aws.access.key
aws.secret.key=aws.secret.key
aws.region=${aws.region}

#elastic
elastic.addresses=${elastic.addresses}
elastic.port=${elastic.port}
elastic.clusterName=${elastic.clusterName}
elastic.user=user
elastic.password=password

redmic.elasticsearch.check.mappings=${redmic.elasticsearch.check.mappings}
redmic.elasticsearch.create.mappings=${redmic.elasticsearch.create.mappings}

spring.jackson.deserialization.fail-on-unknown-properties=true
spring.jackson.deserialization.wrap-exceptions=false
spring.jackson.serialization.write-dates-as-timestamps=false

spring.application.name=api
spring.aop.proxy-target-class=true
# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.schema=sde
spring.datasource.initialization-mode=never

spring.datasource.driverClassName=${spring.datasource.driverClassName}
spring.datasource.username=username
spring.datasource.password=password
spring.datasource.url=${spring.datasource.url}

spring.datasource.hikari.connectionTimeout=30000
spring.datasource.hikari.idleTimeout=600000
spring.datasource.hikari.maxLifetime=1800000


#oauth
oauth.userid.endpoint=${oauth.server}/api/oauth/userid
oauth.check_token.endpoint=${oauth.server}/api/oauth/check_token
oauth.client.id=clientId
oauth.client.secret=secret

# JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)
spring.data.jpa.repositories.enabled=true
spring.jpa.open-in-view=false
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
spring.jpa.properties.dialect=org.hibernate.spatial.dialect.postgis.PostgisDialect
spring.jpa.properties.default_schema=sde
spring.jpa.properties.hibernate.default_schema=sde
spring.jpa.database=postgresql
spring.jpa.database-platform=org.hibernate.spatial.dialect.postgis.PostgisDialect
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false

spring.servlet.multipart.max-file-size=250MB
spring.servlet.multipart.max-request-size=250MB

redmic.elasticsearch.MAX_QUERY_SIZE=3000

#Sitemap properties
property.SITEMAP_DESTINATION_DIR=${property.path.media_storage.TEMP_PUBLIC}
property.SITEMAP_BASE_URL=${property.SITEMAP_BASE_URL}
property.USER_API=${property.USER_API}
property.URL_OPEN_MODULES=${property.USER_API}/api/user/modules/openmodules/
property.LANGS=es,en
property.DEFAULT_LANG=es

#Mapping
controller.mapping.EDIT_SCHEMA=/_schema
controller.mapping.FILTER_SCHEMA=/_search/_schema
controller.mapping.SELECTION_WORK=/_selection
controller.mapping.SELECTIONS=/_selections

#Mediastorage
controller.mapping.MEDIASTORAGE=/mediastorage
controller.mapping.MEDIASTORAGE.UPLOADS_DOCUMENTS=/uploads/documents
controller.mapping.MEDIASTORAGE.UPLOADS_SPECIES=/uploads/species
controller.mapping.MEDIASTORAGE.UPLOADS_CONTACTS=/uploads/contacts
controller.mapping.MEDIASTORAGE.UPLOADS_ORGANISATIONS=/uploads/organisations
controller.mapping.MEDIASTORAGE.UPLOADS_USERS=/uploads/users
controller.mapping.MEDIASTORAGE.UPLOADS_PLATFORMS=/uploads/platforms
controller.mapping.MEDIASTORAGE.UPLOADS_ANIMALS=/uploads/animals
controller.mapping.MEDIASTORAGE.UPLOADS_DATA=/uploads/data
controller.mapping.REPORT=/temp/report

# Tracking
controller.mapping.ACTIVITY_TRACKING=/tracking/activities

controller.mapping.TRACKING_BY_ACTIVITY=/activities/{activityId}/tracking

controller.mapping.TRACKING_ELEMENTS_BY_ACTIVITY=${controller.mapping.TRACKING_BY_ACTIVITY}/elements

controller.mapping.TRACKING_BY_ACTIVITY_AND_ELEMENT=${controller.mapping.TRACKING_ELEMENTS_BY_ACTIVITY}/{uuid}/track

# Edici�n de animalTracking
controller.mapping.ANIMALTRACKING_BY_ACTIVITY=/activities/{activityId}/animaltracking
# Edici�n de platformTracking
controller.mapping.PLATFORMTRACKING_BY_ACTIVITY=/activities/{activityId}/platformtracking

#Biological
controller.mapping.ANIMALTRACKING=/animaltracking

controller.mapping.CITATIONS=/citations/
controller.mapping.CITATIONS_BY_ACTIVITY=/activities/{activityId}/citations
controller.mapping.CITATIONS_BY_DOCUMENTS=/documents/{documentId}/citations

#Locations
controller.mapping.SPECIES_LOCATION=${controller.mapping.SPECIES}/{id}/locations
#Infrastrucure
controller.mapping.INFRASTRUCTURES=/infrastructures/
controller.mapping.INFRASTRUCTURES_BY_ACTIVITY=/activities/{activityId}/infrastructures

# Isolines
controller.mapping.ISOLINES_BY_ACTIVITY=/activities/{activityId}/isolines

# Areas
controller.mapping.AREAS_BY_ACTIVITY=/activities/{activityId}/areas

#Quantitative

controller.mapping.INFRASTRUCTUREATTRIBUTES=/activities/{activityId}/infrastructures/{uuid}/attributes

controller.mapping.SURVEYSTATIONS_TIMESERIES=/surveystations
controller.mapping.SURVEYSTATIONS_BY_ACTIVITY=/activities/{activityId}/timeseriesstations
controller.mapping.TIMESERIES_BY_DATA_DEFINITION=/datadefinitions/{dataDefinitionId}/timeseries
controller.mapping.TIMESERIES=/timeseries
controller.mapping.OBJECTCOLLECTING_BY_ACTIVITY=/activities/{activityId}/objectcollectingseriesstations
controller.mapping.ACTIVITY_OBJECTCOLLECTINGSERIES=/objectcollectingseries/activities
controller.mapping.ACTIVITY_TIMESERIES=/timeseries/activities
#Distribution
controller.mapping.DISTRIBUTIONS=/distributions
#Statistics
controller.mapping.STATISTICS=/statistics

#Administrative
controller.mapping.ACTIVITY=/activities
controller.mapping.ACTIVITY_BY_PROJECT=/projects/{projectId}/activities
controller.mapping.CONTACT=/contacts
controller.mapping.DOCUMENT=/documents
controller.mapping.KEYWORD=/keywords
controller.mapping.ORGANISATION=/organisations
controller.mapping.PLATFORM=/platforms
controller.mapping.PROGRAM=/programs
controller.mapping.PROJECT=/projects
controller.mapping.PROJECT_BY_PROGRAM=/programs/{programId}/projects
#Taxonomy
controller.mapping.TAXONS=/taxons
controller.mapping.KINGDOM=/taxons/kingdoms
controller.mapping.FILUM=/taxons/phylums
controller.mapping.SUBFILUM=/taxons/subphylums
controller.mapping.CLASS=/taxons/classes
controller.mapping.ORDER=/taxons/orders
controller.mapping.FAMILY=/taxons/families
controller.mapping.GENUS=/taxons/genuses
controller.mapping.SPECIES=/taxons/species
controller.mapping.WORMS=/taxons/worms
controller.mapping.ANIMAL=/animals
controller.mapping.MISIDENTIFICATION=/taxons/misidentifications

controller.mapping.RECOVERY=/recovery
controller.mapping.SPECIMENTAG=/specimentag

#Administrative domains
controller.mapping.ACTIVITY_FIELD=/activityfields
controller.mapping.ACTIVITY_TYPE=/activitytypes
controller.mapping.CONTACT_ROLE=/contactroles
controller.mapping.DOCUMENT_TYPE=/documenttypes
controller.mapping.ORGANISATION_ROLES=/organisationroles
controller.mapping.ORGANISATION_TYPES=/organisationtypes
controller.mapping.PLATFORM_TYPE=/platformtypes
controller.mapping.PROJECT_GROUPS=/projectgroups
controller.mapping.SCOPES=/scopes
controller.mapping.COUNTRIES=/countries
controller.mapping.THEME_INSPIRE=/themeinspire

controller.mapping.ORGANISATION_CONTACT_AND_ROLE=/organisationcontactrole
controller.mapping.ORGANISATION_AND_ROLE=/organisationrole
controller.mapping.PLATFORM_CONTACT_AND_ROLE=/platformcontactrole

controller.mapping.CALIBRATION=/calibration

#Taxonomy domains
controller.mapping.CANARY_PROTECTION=/canaryprotections
controller.mapping.ECOLOGY=/ecologies
controller.mapping.ENDEMICITY=/endemicities
controller.mapping.EU_PROTECTION=/euprotections
controller.mapping.INTEREST=/interests
controller.mapping.ORIGIN=/origins
controller.mapping.PERMANENCE=/permanences
controller.mapping.SPAIN_PROTECTION=/spainprotections
controller.mapping.STATUS=/taxons/statuses

controller.mapping.RANK=/ranks
controller.mapping.SPECIES_RANK=/speciesranks

controller.mapping.SPECIES_RANK_SCHEMA=${controller.mapping.RANK}${controller.mapping.SPECIES_RANK}

controller.mapping.TROPHIC_REGIME=/trophicregimes
# Ancillary domains
controller.mapping.METRIC_GROUP=/metricgroups
#Animal domains
controller.mapping.ENDING=/endings
controller.mapping.DESTINY=/destinies
controller.mapping.LIFE_STAGE=/lifestages
controller.mapping.SEX=/sexes
#Areas domains
controller.mapping.AREA_TYPE=/areatypes
controller.mapping.THEMATIC_TYPE=/thematictypes
controller.mapping.AREA_CLASSIFICATION=/areaclassifications

controller.mapping.EVENT_GROUP=/eventgroups
#Common domains
controller.mapping.ACCESSIBILITY=/accessibilities
#Device
controller.mapping.DEVICE=/devices
controller.mapping.DEVICE_TYPE=/devicetypes
#Line
controller.mapping.LINE_TYPE=/linetypes
controller.mapping.SHORELINE_TYPE=/shorelinetypes
#Mesh
controller.mapping.MESH_TYPE=/meshtypes
controller.mapping.RASTER_TYPE=/rastertypes
#Object
controller.mapping.OBJECT_TYPE=/objecttypes
#Observation
controller.mapping.OBSERVATION_TYPE=/observationtypes
#Parameter
controller.mapping.PARAMETER=/parameters
controller.mapping.PARAMETER_TYPE=/parametertypes
controller.mapping.UNIT=/units
controller.mapping.UNIT_TYPE=/unittypes
controller.mapping.METRIC_DEFINITION=/metricdefinitions
#Point
controller.mapping.INFRASTRUCTURE_TYPE=/infrastructuretypes
#Qualifiers
controller.mapping.ATTRIBUTE_TYPE=/attributetypes
controller.mapping.CONDITION=/conditions
#Quality
controller.mapping.QFLAG=/qflags
controller.mapping.VFLAG=/vflags

#Recording
controller.mapping.RECORDING_TYPE=/recordingtypes
#Samples
controller.mapping.SAMPLE=/samples
controller.mapping.SAMPLE_TYPE=/sampletypes
#Strech
controller.mapping.CENSING_STATUS=/censingstatuses
controller.mapping.SEA_CONDITION=/seaconditions
#DataType.biological.base.domain
controller.mapping.CONFIDENCE=/confidences

controller.mapping.FIXEDSURVEY=/fixedsurvey
controller.mapping.MEASUREMENT=/measurement

#Utils
controller.mapping.URL_BASE_UTILS=/utils
controller.mapping.URL_BASE_GEO_UTILS=${controller.mapping.URL_BASE_UTILS}/geo
controller.mapping.utils.geo.CONVERT_TO_GEOJSON=${controller.mapping.URL_BASE_GEO_UTILS}/convert2geojson

#Partial target
contoller.mapping.FILTERED_ACTIVITIES=/{id}/activities

contoller.mapping.FILTERED_DOCUMENTS=/{id}/documents
contoller.mapping.FILTERED_DOCUMENTS_SCHEMA=${contoller.mapping.FILTERED_DOCUMENTS}${controller.mapping.FILTER_SCHEMA}

contoller.mapping.ANCESTORS=/{path:.+}/ancestors
contoller.mapping.ANCESTORS_SCHEMA=${contoller.mapping.ANCESTORS}${controller.mapping.FILTER_SCHEMA}

controller.mapping.TRACK_CLUSTER=/cluster
controller.mapping.TRACK_CLUSTER_SCHEMA=${controller.mapping.TRACK_CLUSTER}${controller.mapping.FILTER_SCHEMA}

controller.mapping.GRID100=/grid100
controller.mapping.GRID100_SCHEMA=${controller.mapping.GRID100}${controller.mapping.FILTER_SCHEMA}

controller.mapping.GRID100_BY_ID=/grid100/{id}
controller.mapping.GRID100_BY_ID_SCHEMA=${controller.mapping.GRID100_BY_ID}${controller.mapping.FILTER_SCHEMA}

controller.mapping.GRID500=/grid500
controller.mapping.GRID500_SCHEMA=${controller.mapping.GRID500}${controller.mapping.FILTER_SCHEMA}

controller.mapping.GRID500_BY_IDE=/grid500/{id}
controller.mapping.GRID500_BY_ID_SCHEMA=${controller.mapping.GRID500_BY_IDE}${controller.mapping.FILTER_SCHEMA}

controller.mapping.GRID1000=/grid1000
controller.mapping.GRID1000_SCHEMA=${controller.mapping.GRID1000}${controller.mapping.FILTER_SCHEMA}

controller.mapping.GRID1000_BY_ID=/grid1000/{id}
controller.mapping.GRID1000_BY_ID_SCHEMA=${controller.mapping.GRID1000_BY_ID}${controller.mapping.FILTER_SCHEMA}

controller.mapping.GRID5000=/grid5000
controller.mapping.GRID5000_SCHEMA=${controller.mapping.GRID5000}${controller.mapping.FILTER_SCHEMA}

controller.mapping.GRID5000_BY_ID=/grid5000/{id}
controller.mapping.GRID5000_BY_ID_SCHEMA=${controller.mapping.GRID5000_BY_ID}${controller.mapping.FILTER_SCHEMA}

#Paths

#Worms
property.path.base.url.worms=http://www.marinespecies.org/rest/
property.path.worms.APHIA_RECORD_BY_APHIAID=${property.path.base.url.worms}AphiaRecordByAphiaID/
property.path.worms.APHIA_RECORDS_BY_NAME=${property.path.base.url.worms}AphiaRecordsByName/
property.path.worms.APHIA_CLASSIFICATION_BY_APHIAID=${property.path.base.url.worms}AphiaClassificationByAphiaID/

#Mediastorage
property.URL_BASE_MEDIASTORAGE=/api/mediastorage
property.URL_BASE_PHOTOBANK_MEDIASTORAGE=${property.URL_BASE_MEDIASTORAGE}/photobank
property.URL_LAYERS_MEDIASTORAGE=${property.URL_BASE_PHOTOBANK_MEDIASTORAGE}/layers/
property.URL_DOCUMENTS=${property.URL_BASE_MEDIASTORAGE}/documents/

property.URL_SPECIES_PHOTOBANK=${property.URL_BASE_PHOTOBANK_MEDIASTORAGE}/species/
property.URL_CONTACTS_PHOTOBANK=${property.URL_BASE_PHOTOBANK_MEDIASTORAGE}/contacts/
property.URL_ORGANISATIONS_PHOTOBANK=${property.URL_BASE_PHOTOBANK_MEDIASTORAGE}/organisations/
property.URL_USERS_PHOTOBANK=${property.URL_BASE_PHOTOBANK_MEDIASTORAGE}/users/
property.URL_PLATFORMS_PHOTOBANK=${property.URL_BASE_PHOTOBANK_MEDIASTORAGE}/platforms/
property.URL_ANIMALS_PHOTOBANK=${property.URL_BASE_PHOTOBANK_MEDIASTORAGE}/animals/

#Base
property.path.media_storage.PRIVATE_BASE_PATH=${property.path.media_storage.PRIVATE_BASE_PATH}
property.path.media_storage.PUBLIC_BASE_PATH=${property.path.media_storage.PUBLIC_BASE_PATH}
property.path.media_storage.LOCAL_PRIVATE_BASE_PATH=${property.path.media_storage.LOCAL_PRIVATE_BASE_PATH}
property.path.media_storage.LOCAL_PUBLIC_BASE_PATH=${property.path.media_storage.LOCAL_PUBLIC_BASE_PATH}

#Finals
property.path.media_storage.DOCUMENTS=${property.path.media_storage.PRIVATE_BASE_PATH}/documents
property.path.media_storage.CONTACTS=${property.path.media_storage.PRIVATE_BASE_PATH}/photobank/contacts
property.path.media_storage.USERS=${property.path.media_storage.PRIVATE_BASE_PATH}/photobank/users

property.path.media_storage.SPECIES=${property.path.media_storage.PUBLIC_BASE_PATH}/photobank/species
property.path.media_storage.PLATFORMS=${property.path.media_storage.PUBLIC_BASE_PATH}/photobank/platforms
property.path.media_storage.ORGANISATIONS=${property.path.media_storage.PUBLIC_BASE_PATH}/photobank/organisations
property.path.media_storage.ANIMALS=${property.path.media_storage.PUBLIC_BASE_PATH}/photobank/animals

#Local private
property.path.media_storage.TEMP_BASE_PATH=${property.path.media_storage.LOCAL_PRIVATE_BASE_PATH}/temp
property.path.media_storage.temp.INGEST_DATA=${property.path.media_storage.TEMP_BASE_PATH}/ingestdata
property.path.temp.report=${property.path.media_storage.TEMP_BASE_PATH}/report
property.path.media_storage.JSONSCHEMA=${property.path.media_storage.TEMP_BASE_PATH}/jsonschema

#Local public
property.path.media_storage.TEMP_PUBLIC=${property.path.media_storage.LOCAL_PUBLIC_BASE_PATH}/temp

#Exclude from autoconfigure
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration,org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration, org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.cassandra.CassandraAutoConfiguration, org.springframework.boot.autoconfigure.cloud.CloudAutoConfiguration, org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration, org.springframework.boot.autoconfigure.couchbase.CouchbaseAutoConfiguration, org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration, org.springframework.boot.autoconfigure.data.cassandra.CassandraDataAutoConfiguration, org.springframework.boot.autoconfigure.data.cassandra.CassandraRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.data.couchbase.CouchbaseDataAutoConfiguration, org.springframework.boot.autoconfigure.data.couchbase.CouchbaseRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchAutoConfiguration, org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataAutoConfiguration, org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.data.ldap.LdapDataAutoConfiguration, org.springframework.boot.autoconfigure.data.ldap.LdapRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration, org.springframework.boot.autoconfigure.data.mongo.MongoRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration, org.springframework.boot.autoconfigure.data.neo4j.Neo4jRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration, org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.data.rest.RepositoryRestMvcAutoConfiguration, org.springframework.boot.autoconfigure.data.solr.SolrRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration, org.springframework.boot.autoconfigure.elasticsearch.jest.JestAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration, org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration, org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration, org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration, org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration, org.springframework.boot.autoconfigure.hazelcast.HazelcastAutoConfiguration, org.springframework.boot.autoconfigure.hazelcast.HazelcastJpaDependencyAutoConfiguration, org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration, org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JndiDataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.XADataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jersey.JerseyAutoConfiguration, org.springframework.boot.autoconfigure.jms.JmsAutoConfiguration, org.springframework.boot.autoconfigure.jms.JndiConnectionFactoryAutoConfiguration, org.springframework.boot.autoconfigure.jms.activemq.ActiveMQAutoConfiguration, org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfiguration, org.springframework.boot.autoconfigure.jooq.JooqAutoConfiguration, org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration, org.springframework.boot.autoconfigure.ldap.LdapAutoConfiguration, org.springframework.boot.autoconfigure.ldap.embedded.EmbeddedLdapAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.mail.MailSenderAutoConfiguration, org.springframework.boot.autoconfigure.mail.MailSenderValidatorAutoConfiguration, org.springframework.boot.autoconfigure.mobile.DeviceDelegatingViewResolverAutoConfiguration, org.springframework.boot.autoconfigure.mobile.DeviceResolverAutoConfiguration, org.springframework.boot.autoconfigure.mobile.SitePreferenceAutoConfiguration, org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration, org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongoAutoConfiguration, org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration, org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration, org.springframework.boot.autoconfigure.security.FallbackWebSecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.OAuth2AutoConfiguration, org.springframework.boot.autoconfigure.sendgrid.SendGridAutoConfiguration, org.springframework.boot.autoconfigure.session.SessionAutoConfiguration, org.springframework.boot.autoconfigure.social.FacebookAutoConfiguration, org.springframework.boot.autoconfigure.social.LinkedInAutoConfiguration, org.springframework.boot.autoconfigure.social.SocialWebAutoConfiguration, org.springframework.boot.autoconfigure.social.TwitterAutoConfiguration, org.springframework.boot.autoconfigure.solr.SolrAutoConfiguration, org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration, org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration, org.springframework.boot.autoconfigure.web.ErrorMvcAutoConfiguration, org.springframework.boot.autoconfigure.web.HttpEncodingAutoConfiguration, org.springframework.boot.actuate.autoconfigure.AuditAutoConfiguration, org.springframework.boot.actuate.autoconfigure.CacheStatisticsAutoConfiguration, org.springframework.boot.actuate.autoconfigure.CrshAutoConfiguration, org.springframework.boot.actuate.autoconfigure.EndpointAutoConfiguration, org.springframework.boot.actuate.autoconfigure.EndpointMBeanExportAutoConfiguration, org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration, org.springframework.boot.actuate.autoconfigure.HealthIndicatorAutoConfiguration, org.springframework.boot.actuate.autoconfigure.InfoContributorAutoConfiguration, org.springframework.boot.actuate.autoconfigure.JolokiaAutoConfiguration, org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration, org.springframework.boot.actuate.autoconfigure.MetricExportAutoConfiguration, org.springframework.boot.actuate.autoconfigure.MetricFilterAutoConfiguration, org.springframework.boot.actuate.autoconfigure.MetricRepositoryAutoConfiguration, org.springframework.boot.actuate.autoconfigure.MetricsChannelAutoConfiguration, org.springframework.boot.actuate.autoconfigure.MetricsDropwizardAutoConfiguration, org.springframework.boot.actuate.autoconfigure.PublicMetricsAutoConfiguration, org.springframework.boot.actuate.autoconfigure.TraceRepositoryAutoConfiguration, org.springframework.boot.actuate.autoconfigure.TraceWebFilterAutoConfiguration, org.springframework.boot.actuate.cloudfoundry.CloudFoundryActuatorAutoConfiguration, org.springframework.boot.autoconfigure.web.WebClientAutoConfiguration, org.springframework.boot.autoconfigure.webservices.WebServicesAutoConfiguration, org.springframework.boot.autoconfigure.websocket.WebSocketAutoConfiguration, org.springframework.boot.autoconfigure.websocket.WebSocketMessagingAutoConfiguration

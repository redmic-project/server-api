version: '3.9'

services:
  api:
    image: ${IMAGE_NAME:-registry.gitlab.com/redmic-project/server/api}:${IMAGE_TAG:-latest}
    build:
      context: ..
      dockerfile: ${DOCKERFILE:-Dockerfile}
      args:
        PARENT_IMAGE_NAME:
        PARENT_IMAGE_TAG:
        MICROSERVICE_NAME:
        MICROSERVICE_PORT:
    environment:
      MICROSERVICE_NAME:
      MICROSERVICE_PORT:
      SPRING_DATASOURCE_USERNAME:
      SPRING_DATASOURCE_PASSWORD:
      SPRING_DATASOURCE_URL:
      OAUTH_CLIENT_ID:
      OAUTH_CLIENT_SECRET:
      AWS_ACCESS_KEY:
      AWS_SECRET_KEY:
      ELASTIC_CLUSTERNAME:
      ELASTIC_USER:
      ELASTIC_PASSWORD:
      JAVA_OPTS: -XX:MaxRAMFraction=2
    networks:
      elastic-net:
      postgres-net:
      redmic-net:
      traefik-net:
    volumes:
      - mediastorage-private-vol:/data/MEDIA_STORAGE
      - mediastorage-public-vol:/data/PUBLIC_MEDIA_STORAGE
    healthcheck:
      test: wget --spider -q http://localhost:${MICROSERVICE_PORT}/${MICROSERVICE_NAME}/actuator/health
      interval: ${HEALTHCHECK_INTERVAL:-30s}
      timeout: ${HEALTHCHECK_TIMEOUT:-10s}
      retries: ${HEALTHCHECK_RETRIES:-10}
      start_period: ${HEALTHCHECK_START_PERIOD:-5m}
    deploy:
      mode: replicated
      replicas: ${REPLICAS:-1}
      labels:
        traefik.enable: 'true'

        traefik.http.routers.redmic-api.entrypoints: ${TRAEFIK_ENTRYPOINT}
        traefik.http.routers.redmic-api.rule: Host(`${PUBLIC_HOSTNAME}`) && PathPrefix(`/${MICROSERVICE_NAME}`)
        traefik.http.services.redmic-api.loadbalancer.server.port: ${MICROSERVICE_PORT}

        traefik.http.routers.mediastorage.entrypoints: ${TRAEFIK_ENTRYPOINT}
        traefik.http.routers.mediastorage.rule: Host(`${PUBLIC_HOSTNAME}`) && PathPrefix(`/${MICROSERVICE_NAME}/mediastorage/photobank/{animals|species|platforms|organisations}`)
        traefik.http.middlewares.mediastorage-redirect-regex.redirectregex.regex: ^.*/${MICROSERVICE_NAME}/mediastorage/(photobank)/(animals|species|platforms|organisations)/(.+\.(?:gif|jpe?g|png))$$
        traefik.http.middlewares.mediastorage-redirect-regex.redirectregex.replacement: https://s3-${AWS_REGION}.amazonaws.com/${S3_BUCKET}/public/$${1}/$${2}/$${3}
        traefik.http.middlewares.mediastorage-redirect-regex.redirectregex.permanent: 'true'
        traefik.http.routers.mediastorage.middlewares: mediastorage-redirect-regex
        traefik.http.routers.mediastorage.service: noop@internal
      restart_policy:
        delay: ${RESTART_DELAY:-1m}
      update_config:
        delay: ${UPDATE_DELAY:-2m}

networks:
  elastic-net:
    name: ${ELASTIC_NET_NAME:-elastic6-net}
    driver: ${ELASTIC_NET_DRIVER:-overlay}
    external: true

  postgres-net:
    name: ${POSTGRES_NET_NAME:-postgres-net}
    driver: ${POSTGRES_NET_DRIVER:-overlay}
    external: true

  redmic-net:
    name: ${REDMIC_NET_NAME:-redmic-net}
    driver: ${REDMIC_NET_DRIVER:-overlay}
    external: true

  traefik-net:
    name: ${TRAEFIK_NET_NAME:-traefik-net}
    driver: ${TRAEFIK_NET_DRIVER:-overlay}
    external: true
